---
name: Release

on:
  release:
    types: [published]

jobs:
  publish-capi-yamls:
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - id: get_version
        run: |
          RELEASE_VERSION=$(echo $GITHUB_REF | sed -nE 's!refs/tags/!!p')
          echo "::set-output name=release_version::${RELEASE_VERSION}"
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: false
      - name: Prepare all release files for the provider
        run: |
          make release TAG=${RELEASE_VERSION}
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.release_version }}
      - name: Save release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release/
      - name: Attach release assets
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.release_version }}
        run: |
          gh release upload ${RELEASE_VERSION} cluster-template.yaml infrastructure-components.yaml metadata.yaml --clobber
  publish-images:
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - id: get_version
        run: |
          RELEASE_VERSION=$(echo $GITHUB_REF | sed -nE 's!refs/tags/!!p')
          echo "::set-output name=release_version::${RELEASE_VERSION}"
      - name: Get Docker Image Metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/radiant-maxar/cluster-api-provider-vcluster
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push release cluster-api-provider-vcluster image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Images digests
        run: echo ${{ steps.docker_build.outputs.digest }}
